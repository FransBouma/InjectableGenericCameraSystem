Resident Evil 2
===========================

Vignette removal:
re2.exe+FFA7BD8 - 89 83 D4000000        - mov [rbx+000000D4],eax
re2.exe+FFA7BDE - 8B 87 38010000        - mov eax,[rdi+00000138]
re2.exe+FFA7BE4 - 89 83 D8000000        - mov [rbx+000000D8],eax
re2.exe+FFA7BEA - 8B 87 3C010000        - mov eax,[rdi+0000013C]				<< CHANGE INTO: XOR eax, eax; + 4 nops. See below:
re2.exe+FFA7BF0 - 89 83 DC000000        - mov [rbx+000000DC],eax
re2.exe+FFA7BF6 - 8B 87 CC010000        - mov eax,[rdi+000001CC]
re2.exe+FFA7BFC - 89 83 88010000        - mov [rbx+00000188],eax
re2.exe+FFA7C02 - 8B 87 DC010000        - mov eax,[rdi+000001DC]
re2.exe+FFA7C08 - 89 83 8C010000        - mov [rbx+0000018C],eax
re2.exe+FFA7C0E - 0F10 87 E0010000      - movups xmm0,[rdi+000001E0]
re2.exe+FFA7C15 - 0F11 83 90010000      - movups [rbx+00000190],xmm0
re2.exe+FFA7C1C - 0F10 87 F0010000      - movups xmm0,[rdi+000001F0]

change that into:
re2.exe+FFA7BDE - 8B 87 38010000        - mov eax,[rdi+00000138]
re2.exe+FFA7BE4 - 89 83 D8000000        - mov [rbx+000000D8],eax
re2.exe+FFA7BEA - 31 C0                 - xor eax,eax
re2.exe+FFA7BEC - 90                    - nop 
re2.exe+FFA7BED - 90                    - nop 
re2.exe+FFA7BEE - 90                    - nop 
re2.exe+FFA7BEF - 90                    - nop 
re2.exe+FFA7BF0 - 89 83 DC000000        - mov [rbx+000000DC],eax
re2.exe+FFA7BF6 - 8B 87 CC010000        - mov eax,[rdi+000001CC]
re2.exe+FFA7BFC - 89 83 88010000        - mov [rbx+00000188],eax
re2.exe+FFA7C02 - 8B 87 DC010000        - mov eax,[rdi+000001DC]


hotsampling:
re2.exe+EF9BE37 - 72 06                 - jb re2.exe+EF9BE3F
re2.exe+EF9BE39 - F3 44 0F11 4B 4C      - movss [rbx+4C],xmm9
re2.exe+EF9BE3F - F3 44 0F10 15 4471E7F4  - movss xmm10,[re2.exe+3E12F8C] { (2270.00) }
re2.exe+EF9BE48 - 48 8D 45 10           - lea rax,[rbp+10]
re2.exe+EF9BE4C - 48 89 45 18           - mov [rbp+18],rax
re2.exe+EF9BE50 - 48 8D 3D A94106F1     - lea rdi,[re2.exe] { (9460301) }
re2.exe+EF9BE57 - 8B 43 74              - mov eax,[rbx+74]							<< READ camera type (set to 0 for fit).
re2.exe+EF9BE5A - FF C8                 - dec eax
re2.exe+EF9BE5C - 83 F8 11              - cmp eax,11 { 17 }
re2.exe+EF9BE5F - 0F87 3B010000         - ja re2.exe+EF9BFA0
re2.exe+EF9BE65 - 48 98                 - cdqe 
re2.exe+EF9BE67 - 8B 8C 87 1CF9DD01     - mov ecx,[rdi+rax*4+01DDF91C]

To obtain the address, see: (same as DMC5). 
re2.exe+EF9BD9D - 48 8B 49 10           - mov rcx,[rcx+10]
re2.exe+EF9BDA1 - F3 0F10 0D 23F31CF8   - movss xmm1,[re2.exe+716B0CC] { (0.00) }
re2.exe+EF9BDA9 - 44 0F29 44 24 40      - movaps [rsp+40],xmm8
re2.exe+EF9BDAF - 44 0F29 4C 24 30      - movaps [rsp+30],xmm9
re2.exe+EF9BDB5 - F3 0F11 45 10         - movss [rbp+10],xmm0
re2.exe+EF9BDBA - F3 0F11 4D 14         - movss [rbp+14],xmm1
re2.exe+EF9BDBF - 44 0F29 54 24 20      - movaps [rsp+20],xmm10
re2.exe+EF9BDC5 - 48 85 C9              - test rcx,rcx
re2.exe+EF9BDC8 - 74 20                 - je re2.exe+EF9BDEA

FOV write1 
re2.exe+AD0B445 - 75 13                 - jne re2.exe+AD0B45A
re2.exe+AD0B447 - 45 31 C0              - xor r8d,r8d
re2.exe+AD0B44A - 8D 50 38              - lea edx,[rax+38]
re2.exe+AD0B44D - 48 89 D9              - mov rcx,rbx
re2.exe+AD0B450 - E8 7B760CF7           - call re2.exe+1DD2AD0
re2.exe+AD0B455 - E9 510A0000           - jmp re2.exe+AD0BEAB
re2.exe+AD0B45A - F3 0F10 40 38         - movss xmm0,[rax+38]
re2.exe+AD0B45F - F3 0F11 82 A4000000   - movss [rdx+000000A4],xmm0					<< WRITE FOV
re2.exe+AD0B467 - 48 83 79 18 00        - cmp qword ptr [rcx+18],00 { 0 }
re2.exe+AD0B46C - 0F85 390A0000         - jne re2.exe+AD0BEAB
re2.exe+AD0B472 - 48 8B 8A B8000000     - mov rcx,[rdx+000000B8]
re2.exe+AD0B479 - 44 0F29 4C 24 50      - movaps [rsp+50],xmm9
re2.exe+AD0B47F - 48 85 C9              - test rcx,rcx
re2.exe+AD0B482 - 74 23                 - je re2.exe+AD0B4A7

FOV write2:
re2.exe+AD0B845 - 0F84 DA050000         - je re2.exe+AD0BE25
re2.exe+AD0B84B - F3 0F10 78 30         - movss xmm7,[rax+30]
re2.exe+AD0B850 - F3 44 0F10 40 34      - movss xmm8,[rax+34]
re2.exe+AD0B856 - 8B 40 38              - mov eax,[rax+38]
re2.exe+AD0B859 - 89 87 A4000000        - mov [rdi+000000A4],eax					<< WRITE FOV
re2.exe+AD0B85F - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+AD0B863 - 48 8B 48 18           - mov rcx,[rax+18]
re2.exe+AD0B867 - 48 85 C9              - test rcx,rcx
re2.exe+AD0B86A - 0F85 2D060000         - jne re2.exe+AD0BE9D

FOV write3:
re2.exe+AD0B9EC - F3 0F5A C0            - cvtss2sd xmm0,xmm0
re2.exe+AD0B9F0 - F2 0F59 05 483C10F9   - mulsd xmm0,[re2.exe+3E0F640] { (0) }
re2.exe+AD0B9F8 - F2 0F5A C0            - cvtsd2ss xmm0,xmm0
re2.exe+AD0B9FC - F3 0F11 87 A4000000   - movss [rdi+000000A4],xmm0					<< WRITE FOV
re2.exe+AD0BA04 - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+AD0BA08 - 48 8B 48 18           - mov rcx,[rax+18]
re2.exe+AD0BA0C - 48 85 C9              - test rcx,rcx
re2.exe+AD0BA0F - 0F85 88040000         - jne re2.exe+AD0BE9D


COORDS
re2.exe+AD0B7D9 - 0F85 BE060000         - jne re2.exe+AD0BE9D
re2.exe+AD0B7DF - F3 0F10 86 80000000   - movss xmm0,[rsi+00000080]
re2.exe+AD0B7E7 - F3 0F10 8E 84000000   - movss xmm1,[rsi+00000084]
re2.exe+AD0B7EF - F3 0F10 96 88000000   - movss xmm2,[rsi+00000088]
re2.exe+AD0B7F7 - F3 0F11 87 80000000   - movss [rdi+00000080],xmm0					<< X
re2.exe+AD0B7FF - F3 0F11 8F 84000000   - movss [rdi+00000084],xmm1					<< Y
re2.exe+AD0B807 - F3 0F11 97 88000000   - movss [rdi+00000088],xmm2					<< Z
re2.exe+AD0B80F - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+AD0B813 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+AD0B818 - 0F85 7F060000         - jne re2.exe+AD0BE9D
re2.exe+AD0B81E - 0F10 86 90000000      - movups xmm0,[rsi+00000090]
re2.exe+AD0B825 - 0F11 87 90000000      - movups [rdi+00000090],xmm0
re2.exe+AD0B82C - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+AD0B830 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+AD0B835 - 0F85 62060000         - jne re2.exe+AD0BE9D

QUATERNION:
re2.exe+AD0B813 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+AD0B818 - 0F85 7F060000         - jne re2.exe+AD0BE9D
re2.exe+AD0B81E - 0F10 86 90000000      - movups xmm0,[rsi+00000090]
re2.exe+AD0B825 - 0F11 87 90000000      - movups [rdi+00000090],xmm0				<< WRITE quaternion.
re2.exe+AD0B82C - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+AD0B830 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+AD0B835 - 0F85 62060000         - jne re2.exe+AD0BE9D
re2.exe+AD0B83B - 48 8B 86 A8000000     - mov rax,[rsi+000000A8]
re2.exe+AD0B842 - 48 85 C0              - test rax,rax
re2.exe+AD0B845 - 0F84 DA050000         - je re2.exe+AD0BE25
re2.exe+AD0B84B - F3 0F10 78 30         - movss xmm7,[rax+30]
re2.exe+AD0B850 - F3 44 0F10 40 34      - movss xmm8,[rax+34]
re2.exe+AD0B856 - 8B 40 38              - mov eax,[rax+38]
re2.exe+AD0B859 - 89 87 A4000000        - mov [rdi+000000A4],eax

Timestop / gamespeed:
re2.exe+EF6E35A - 0F57 C0               - xorps xmm0,xmm0
re2.exe+EF6E35D - 89 C1                 - mov ecx,eax
re2.exe+EF6E35F - F3 48 0F2A C1         - cvtsi2ss xmm0,rcx
re2.exe+EF6E364 - F3 0F58 C1            - addss xmm0,xmm1
re2.exe+EF6E368 - F3 0F11 87 88030000   - movss [rdi+00000388],xmm0
re2.exe+EF6E370 - C7 87 84030000 0000803F - mov [rdi+00000384],3F800000 { (0) }
re2.exe+EF6E37A - F3 0F10 97 A0030000   - movss xmm2,[rdi+000003A0]
re2.exe+EF6E382 - F3 0F10 87 84030000   - movss xmm0,[rdi+00000384]
re2.exe+EF6E38A - 0F2F C2               - comiss xmm0,xmm2
re2.exe+EF6E38D - F3 0F10 9F 80030000   - movss xmm3,[rdi+00000380]					<< READ from gamespeed: SET TO 1.0 for normal procedure, 0.00001 otherwise.
re2.exe+EF6E395 - 76 03                 - jna re2.exe+EF6E39A
re2.exe+EF6E397 - 0F28 C2               - movaps xmm0,xmm2
re2.exe+EF6E39A - F3 0F59 C3            - mulss xmm0,xmm3
re2.exe+EF6E39E - 0F2F 87 A4030000      - comiss xmm0,[rdi+000003A4]
re2.exe+EF6E3A5 - F3 0F11 87 84030000   - movss [rdi+00000384],xmm0

Resolution Scaling:
re2.exe+10026BCF - E8 BCA92EF2           - call re2.exe+2311590
re2.exe+10026BD4 - 48 8B 05 355605F7     - mov rax,[re2.exe+707C210] { (17F58950) }
re2.exe+10026BDB - 48 8D 4C 24 58        - lea rcx,[rsp+58]
re2.exe+10026BE0 - C7 44 24 58 CDCCCC3D  - mov [rsp+58],3DCCCCCD { (0) }
re2.exe+10026BE8 - F3 0F10 80 CC110000   - movss xmm0,[rax+000011CC]				<< READ resolution scaling.
re2.exe+10026BF0 - 48 8D 44 24 54        - lea rax,[rsp+54]
re2.exe+10026BF5 - F3 41 0F59 46 40      - mulss xmm0,[r14+40]
re2.exe+10026BFB - 0F2F C7               - comiss xmm0,xmm7
re2.exe+10026BFE - F3 0F11 44 24 54      - movss [rsp+54],xmm0
re2.exe+10026C04 - 48 0F46 C1            - cmovbe rax,rcx
re2.exe+10026C08 - F3 0F10 08            - movss xmm1,[rax]
re2.exe+10026C0C - 0F2F F1               - comiss xmm6,xmm1

HUD toggle:
re2.exe+F5AD6D2 - 49 89 D5              - mov r13,rdx
re2.exe+F5AD6D5 - 80 78 08 00           - cmp byte ptr [rax+08],00 { 0 }
re2.exe+F5AD6D9 - 0F84 E3010000         - je re2.exe+F5AD8C2
re2.exe+F5AD6DF - 48 89 7C 24 30        - mov [rsp+30],rdi
re2.exe+F5AD6E4 - 48 8B 3D FDDCBBF7     - mov rdi,[re2.exe+716B3E8] { (0) }			<< READ ADDRESS, add 8 for hud toggle.
re2.exe+F5AD6EB - 80 7F 08 00           - cmp byte ptr [rdi+08],00 { 0 }
re2.exe+F5AD6EF - 66 C7 47 0A 0000      - mov word ptr [rdi+0A],0000 { 0 }
re2.exe+F5AD6F5 - 0F84 9E010000         - je re2.exe+F5AD899
re2.exe+F5AD6FB - 48 8B 05 16EAACF7     - mov rax,[re2.exe+707C118] { (2B51B380) }
re2.exe+F5AD702 - 48 8B 48 48           - mov rcx,[rax+48]
re2.exe+F5AD706 - 48 85 C9              - test rcx,rcx
re2.exe+F5AD709 - 74 19                 - je re2.exe+F5AD724
re2.exe+F5AD70B - 80 B9 11020000 00     - cmp byte ptr [rcx+00000211],00 { 0 }
re2.exe+F5AD712 - 75 09                 - jne re2.exe+F5AD71D
re2.exe+F5AD714 - E8 773D81F2           - call re2.exe+1DC1490
re2.exe+F5AD719 - 84 C0                 - test al,al

DOF selector:
re2.exe+102BC830 - 89 51 4C              - mov [rcx+4C],edx							<<< WRITE DOF type. Set to dof 1
re2.exe+102BC833 - 85 D2                 - test edx,edx
re2.exe+102BC835 - 74 0E                 - je re2.exe+102BC845
re2.exe+102BC837 - 83 EA 01              - sub edx,01 { 1 }
re2.exe+102BC83A - 74 09                 - je re2.exe+102BC845
re2.exe+102BC83C - 83 FA 01              - cmp edx,01 { 1 }
re2.exe+102BC83F - 75 08                 - jne re2.exe+102BC849
re2.exe+102BC841 - 88 51 50              - mov [rcx+50],dl
re2.exe+102BC844 - C3                    - ret 
re2.exe+102BC845 - C6 41 50 00           - mov byte ptr [rcx+50],00 { 0 }
re2.exe+102BC849 - C3                    - ret 

DOF Far blur write2: (the first isn't useful).
re2.exe+102BCEDC - 48 0F46 C1            - cmovbe rax,rcx
re2.exe+102BCEE0 - F3 0F11 4C 24 10      - movss [rsp+10],xmm1
re2.exe+102BCEE6 - 49 8B 48 38           - mov rcx,[r8+38]
re2.exe+102BCEEA - C7 44 24 08 17B7D138  - mov [rsp+08],38D1B717 { (-11776) }
re2.exe+102BCEF2 - 8B 00                 - mov eax,[rax]							<<< replace with XOR eax, eax
re2.exe+102BCEF4 - 89 81 8C000000        - mov [rcx+0000008C],eax
re2.exe+102BCEFA - 48 8D 44 24 10        - lea rax,[rsp+10]
re2.exe+102BCEFF - 48 8D 4C 24 08        - lea rcx,[rsp+08]
re2.exe+102BCF04 - F3 0F11 4C 24 10      - movss [rsp+10],xmm1
re2.exe+102BCF0A - 48 0F46 C1            - cmovbe rax,rcx
re2.exe+102BCF0E - C7 44 24 08 17B7D138  - mov [rsp+08],38D1B717 { (-11776) }
re2.exe+102BCF16 - 49 8B 48 40           - mov rcx,[r8+40]
re2.exe+102BCF1A - 8B 00                 - mov eax,[rax]
re2.exe+102BCF1C - 89 81 B4000000        - mov [rcx+000000B4],eax
re2.exe+102BCF22 - C3                    - ret 

One is for blur 1, one is for blur 2. We'll select blur 1 so we have to intercept 1. 

Sharpening removal:
re2.exe+10210590 - 0F84 00010000         - je re2.exe+10210696
re2.exe+10210596 - 48 8B 8E 884A0000     - mov rcx,[rsi+00004A88]
re2.exe+1021059D - E8 CEA6E3F1           - call re2.exe+204AC70
re2.exe+102105A2 - 80 BB FD000000 00     - cmp byte ptr [rbx+000000FD],00 { 0 }
re2.exe+102105A9 - 48 89 C7              - mov rdi,rax
re2.exe+102105AC - 74 05                 - je re2.exe+102105B3							<< NOP so it ends up using the jmp to 5DF
re2.exe+102105AE - 0F57 C0               - xorps xmm0,xmm0
re2.exe+102105B1 - EB 2C                 - jmp re2.exe+102105DF
re2.exe+102105B3 - 8B 83 94010000        - mov eax,[rbx+00000194]						<< AA type check. TAA uses '4'. 
re2.exe+102105B9 - 83 F8 03              - cmp eax,03 { 3 }
re2.exe+102105BC - 75 0A                 - jne re2.exe+102105C8

------------
alternative cameras:
FOV (cutscene / gameplay)
re2.exe+C08F2EF - 0F85 FCFBFFFF         - jne re2.exe+C08EEF1
re2.exe+C08F2F5 - 48 85 DB              - test rbx,rbx
re2.exe+C08F2F8 - 0F84 39040000         - je re2.exe+C08F737
re2.exe+C08F2FE - F2 0F59 CE            - mulsd xmm1,xmm6
re2.exe+C08F302 - 66 0F5A C1            - cvtpd2ps xmm0,xmm1
re2.exe+C08F306 - F3 0F11 43 54         - movss [rbx+54],xmm0						<< WRITE FOV. Real fov that is. 
re2.exe+C08F30B - E9 38040000           - jmp re2.exe+C08F748
re2.exe+C08F310 - 48 8B 96 68010000     - mov rdx,[rsi+00000168]
re2.exe+C08F317 - 48 89 F9              - mov rcx,rdi
re2.exe+C08F31A - 48 85 D2              - test rdx,rdx
re2.exe+C08F31D - 0F84 CF030000         - je re2.exe+C08F6F2

Coords write (gameplay)
re2.exe+C08F20C - F3 0F10 44 24 40      - movss xmm0,[rsp+40]
re2.exe+C08F212 - F3 0F10 4C 24 44      - movss xmm1,[rsp+44]
re2.exe+C08F218 - F3 0F11 86 80000000   - movss [rsi+00000080],xmm0					<< WRITE X
re2.exe+C08F220 - F3 0F10 44 24 48      - movss xmm0,[rsp+48]
re2.exe+C08F226 - F3 0F11 86 88000000   - movss [rsi+00000088],xmm0					<< WRITE Z
re2.exe+C08F22E - F3 0F11 8E 84000000   - movss [rsi+00000084],xmm1					<< WRITE Y
re2.exe+C08F236 - 48 8B 47 50           - mov rax,[rdi+50]
re2.exe+C08F23A - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+C08F23F - 0F85 ACFCFFFF         - jne re2.exe+C08EEF1

Quaternion write1 (gameplay)
re2.exe+BDD8947 - F3 0F10 8F 08010000   - movss xmm1,[rdi+00000108]
re2.exe+BDD894F - 0F57 DB               - xorps xmm3,xmm3
re2.exe+BDD8952 - E8 094346F4           - call re2.exe+23CC60
re2.exe+BDD8957 - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+BDD895B - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+BDD8960 - 0F85 49030000         - jne re2.exe+BDD8CAF						<< TAKE CARE -> has to jmp to the jmp below!
re2.exe+BDD8966 - 0F28 44 24 40         - movaps xmm0,[rsp+40]
re2.exe+BDD896B - 0F11 87 90000000      - movups [rdi+00000090],xmm0				<< WRITE 4 floats at once.
re2.exe+BDD8972 - E9 38030000           - jmp re2.exe+BDD8CAF
re2.exe+BDD8977 - F3 0F10 B7 30010000   - movss xmm6,[rdi+00000130]

Quaternion write2 (gameplay)
re2.exe+C08F23F - 0F85 ACFCFFFF         - jne re2.exe+C08EEF1
re2.exe+C08F245 - F3 0F10 85 B0010000   - movss xmm0,[rbp+000001B0]
re2.exe+C08F24D - F3 0F10 8D C0010000   - movss xmm1,[rbp+000001C0]
re2.exe+C08F255 - F3 0F10 95 C8010000   - movss xmm2,[rbp+000001C8]
re2.exe+C08F25D - F3 0F11 86 90000000   - movss [rsi+00000090],xmm0					<< WRITE Qx
re2.exe+C08F265 - F3 0F10 44 24 70      - movss xmm0,[rsp+70]
re2.exe+C08F26B - F3 0F11 86 9C000000   - movss [rsi+0000009C],xmm0					<< WRITE Qw
re2.exe+C08F273 - F3 0F11 8E 94000000   - movss [rsi+00000094],xmm1					<< WRITE Qy
re2.exe+C08F27B - F3 0F11 96 98000000   - movss [rsi+00000098],xmm2					<< WRITE Qz
re2.exe+C08F283 - 48 8B 47 50           - mov rax,[rdi+50]
re2.exe+C08F287 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+C08F28C - 0F85 5FFCFFFF         - jne re2.exe+C08EEF1

Quaternion write3: (rebalance the camera, gameplay)
re2.exe+BDD8C26 - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+BDD8C2A - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+BDD8C2F - 75 0C                 - jne re2.exe+BDD8C3D						>> JUMPS below write, watch out.
re2.exe+BDD8C31 - 0F28 44 24 40         - movaps xmm0,[rsp+40]
re2.exe+BDD8C36 - 0F11 87 90000000      - movups [rdi+00000090],xmm0				<< WRITE 4 floats at once
re2.exe+BDD8C3D - 48 8B 43 50           - mov rax,[rbx+50]
re2.exe+BDD8C41 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re2.exe+BDD8C46 - 75 67                 - jne re2.exe+BDD8CAF
re2.exe+BDD8C48 - 0F2F 35 CD6903F8      - comiss xmm6,[re2.exe+3E0F61C] { (1.00) }

Coords cutscene (writes to multiple locations, doesn't matter, block all)
re2.exe+EF7B91D - EB 14                 - jmp re2.exe+EF7B933
re2.exe+EF7B91F - 41 8B 06              - mov eax,[r14]
re2.exe+EF7B922 - 89 47 30              - mov [rdi+30],eax							<< X
re2.exe+EF7B925 - 41 8B 46 04           - mov eax,[r14+04]
re2.exe+EF7B929 - 89 47 34              - mov [rdi+34],eax
re2.exe+EF7B92C - 41 8B 46 08           - mov eax,[r14+08]
re2.exe+EF7B930 - 89 47 38              - mov [rdi+38],eax
re2.exe+EF7B933 - 80 BF D2000000 00     - cmp byte ptr [rdi+000000D2],00 { 0 }

quaternion cutscene (writes to multiple locations, doesn't matter, block all)
re2.exe+EF7BBF8 - EB 1B                 - jmp re2.exe+EF7BC15
re2.exe+EF7BBFA - 41 8B 06              - mov eax,[r14]
re2.exe+EF7BBFD - 89 47 40              - mov [rdi+40],eax							<< qX
re2.exe+EF7BC00 - 41 8B 46 04           - mov eax,[r14+04]
re2.exe+EF7BC04 - 89 47 44              - mov [rdi+44],eax
re2.exe+EF7BC07 - 41 8B 46 08           - mov eax,[r14+08]
re2.exe+EF7BC0B - 89 47 48              - mov [rdi+48],eax
re2.exe+EF7BC0E - 41 8B 46 0C           - mov eax,[r14+0C]
re2.exe+EF7BC12 - 89 47 4C              - mov [rdi+4C],eax
re2.exe+EF7BC15 - 80 BF D2000000 00     - cmp byte ptr [rdi+000000D2],00 { 0 }
re2.exe+EF7BC1C - C6 87 D1000000 01     - mov byte ptr [rdi+000000D1],01 { 1 }

